version: 2

machine:
  timezone: Europe/Helsinki

jobs:
  build:
    docker:
      - image: circleci/golang:1.13.4-node
        environment:
          PARALLELISM: 2
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c7:9d:ad:53:66:b0:30:f6:72:92:f0:9a:0d:95:96:73"
      - checkout
      - run:
          name: Setup git
          command: |
            git config --global user.name circleci-bot
            git config --global user.email circleci-bot@circleci.com
      - run:
          name: Install tools
          command: |
            sudo apt-get update
            sudo apt-get install -y -qq graphviz
            sudo npm install -g prettier markdown-toc
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
      - run:
          name: Set build cache keys
          command: |
            # Hack in order to use custom cache keys. CircleCI doesn't allow
            # other environment variables to be used except their pre-defined ones
            mkdir -p .cache
            echo "$(git rev-parse 'HEAD^')" >> .cache/previous_build_cache
            echo "$(git rev-parse 'HEAD')" >> .cache/current_build_cache
      # Dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
      # Cache for Go compilation and tests
      - restore_cache:
          keys:
            # Use cache from current SHA1 if it exists. Works if re-running the build
            - v1-go-{{ arch }}-{{ checksum ".cache/current_build_cache" }}
            # Get cache from previous git commit
            - v1-go-{{ arch }}-{{ checksum ".cache/previous_build_cache" }}
      - run:
          name: Install dependencies
          command: |
            if [[ $CIRCLE_BRANCH != "master" ]]; then
              make dep-update
              if [[ $(git status --porcelain) ]]; then
                git add --all
                git commit -m "AUTOMATIC BOT: Install/update dependencies"
              fi
            else
              make dep
            fi
      - save_cache:
          key: v1-deps-{{ arch }}-{{ checksum "go.mod" }}-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod
      - run:
          name: make format
          command: |
            if [[ $CIRCLE_BRANCH != "master" ]]; then
              make format
              if [[ $(git status --porcelain) ]]; then
                git add --all
                git commit -m "AUTOBOT: Format"
              fi
            fi
      - run:
          name: make diagram
          command: |
            if [[ $CIRCLE_BRANCH != "master" ]]; then
              make diagram
              if [[ $(git status --porcelain) ]]; then
                git add --all
                git commit -m "AUTOBOT: Update diagrams"
              fi
            fi
      - run: make build
      - setup_remote_docker
      - run: make docker
      - run: make lint
      - run:
          name: make test-codecov
          command: |
            make test-codecov
            if [[ $(git status --porcelain) ]]; then
              git add --all
              git commit -m "AUTOBOT: Update snapshots"
            fi
      # Save build and test cache for next commit
      - save_cache:
          key: v1-go-{{ arch }}-{{ checksum ".cache/current_build_cache" }}
          paths:
            - /home/circleci/.cache/go-build
      - run:
          name: Push autobot changes
          command: |
            if [[ $CIRCLE_BRANCH != "master" ]]; then
              if [[ $(git log origin/$CIRCLE_BRANCH..$CIRCLE_BRANCH) ]]; then
                echo "Pushing autobot changes"
                git push --set-upstream origin $CIRCLE_BRANCH
                exit 1
              fi
            fi
      - run:
          name: Copy binaries to workspace
          command: |
            mkdir -p /tmp/workspace
            cp -R bin Makefile Dockerfile /tmp/workspace
            make version > /tmp/workspace/VERSION
            make commit > /tmp/workspace/COMMIT
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bin
            - Makefile
            - Dockerfile
            - VERSION
            - COMMIT

  release:
    docker:
      - image: circleci/golang:1.13.4
        environment:
          PARALLELISM: 2
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy workspace
          command: |
            cp -R /tmp/workspace/* .
            VERSION=$(cat VERSION)
            export VERSION
            COMMIT=$(cat COMMIT)
            export COMMIT
      - setup_remote_docker
      - run: make release

workflows:
  version: 2
  authproxy:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only:
                - master
            tags:
              only: /^v.*/
